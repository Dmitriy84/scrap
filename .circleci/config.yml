# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  gradle: circleci/gradle@3.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  run-scrape:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/openjdk:19.0.1-browsers
    environment:
      QASE_ENABLE: false
      SPRING_PROFILES_ACTIVE: test
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Submodules update"
          command: git submodule update --init --recursive --force --remote
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          steps:
            - run:
                command: ./gradlew build -x test
                name: Cache gradle build
                working_directory: ""
          wrapper_checksum_file: gradle/wrapper/gradle-wrapper.properties
      - gradle/with_cache:
          deps_checksum_file: build.gradle.kts
          steps:
            - run:
                command: ./gradlew :money:test --tests 'dmalohlovets.money24.ScrapeRatesTests.scrap'
                no_output_timeout: 12h
                name: Scrape rates
                working_directory: ""
          wrapper_checksum_file: gradle/wrapper/gradle-wrapper.properties
      - gradle/collect_test_results:
          reports_path: money/rates.csv
          test_results_path: money/rates.csv


# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  run-scrape-workflow:
    jobs:
      - run-scrape